// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: samba_admin.proto

package proto_samba_management

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestSambaShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner    string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Spaceid  string `protobuf:"bytes,2,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Shareid  string `protobuf:"bytes,4,opt,name=shareid,proto3" json:"shareid,omitempty"`
}

func (x *RequestSambaShare) Reset() {
	*x = RequestSambaShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSambaShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSambaShare) ProtoMessage() {}

func (x *RequestSambaShare) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSambaShare.ProtoReflect.Descriptor instead.
func (*RequestSambaShare) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{0}
}

func (x *RequestSambaShare) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RequestSambaShare) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

func (x *RequestSambaShare) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RequestSambaShare) GetShareid() string {
	if x != nil {
		return x.Shareid
	}
	return ""
}

type SambaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Fsid   string `protobuf:"bytes,2,opt,name=fsid,proto3" json:"fsid,omitempty"`
	Ip     string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *SambaResponse) Reset() {
	*x = SambaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SambaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SambaResponse) ProtoMessage() {}

func (x *SambaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SambaResponse.ProtoReflect.Descriptor instead.
func (*SambaResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{1}
}

func (x *SambaResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SambaResponse) GetFsid() string {
	if x != nil {
		return x.Fsid
	}
	return ""
}

func (x *SambaResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type AddUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ShareId  string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AddUser) Reset() {
	*x = AddUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUser) ProtoMessage() {}

func (x *AddUser) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUser.ProtoReflect.Descriptor instead.
func (*AddUser) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AddUser) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AddUser) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *AddUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddUserResponse) Reset() {
	*x = AddUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResponse) ProtoMessage() {}

func (x *AddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResponse.ProtoReflect.Descriptor instead.
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AddUserResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AddUserResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeleteShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Shareid string `protobuf:"bytes,2,opt,name=shareid,proto3" json:"shareid,omitempty"`
}

func (x *DeleteShareRequest) Reset() {
	*x = DeleteShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShareRequest) ProtoMessage() {}

func (x *DeleteShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShareRequest.ProtoReflect.Descriptor instead.
func (*DeleteShareRequest) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteShareRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *DeleteShareRequest) GetShareid() string {
	if x != nil {
		return x.Shareid
	}
	return ""
}

type DeleteShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Shareid string `protobuf:"bytes,2,opt,name=shareid,proto3" json:"shareid,omitempty"`
	Status  int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteShareResponse) Reset() {
	*x = DeleteShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShareResponse) ProtoMessage() {}

func (x *DeleteShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShareResponse.ProtoReflect.Descriptor instead.
func (*DeleteShareResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteShareResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *DeleteShareResponse) GetShareid() string {
	if x != nil {
		return x.Shareid
	}
	return ""
}

func (x *DeleteShareResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SpaceAllocationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int32  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Owner    string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Spaceid  string `protobuf:"bytes,4,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
	Tid      string `protobuf:"bytes,5,opt,name=tid,proto3" json:"tid,omitempty"`
}

func (x *SpaceAllocationMessage) Reset() {
	*x = SpaceAllocationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceAllocationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceAllocationMessage) ProtoMessage() {}

func (x *SpaceAllocationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceAllocationMessage.ProtoReflect.Descriptor instead.
func (*SpaceAllocationMessage) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{6}
}

func (x *SpaceAllocationMessage) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SpaceAllocationMessage) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SpaceAllocationMessage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SpaceAllocationMessage) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

func (x *SpaceAllocationMessage) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

type SpaceAllocationMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int32  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Owner    string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Spaceid  string `protobuf:"bytes,4,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
}

func (x *SpaceAllocationMessageResponse) Reset() {
	*x = SpaceAllocationMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceAllocationMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceAllocationMessageResponse) ProtoMessage() {}

func (x *SpaceAllocationMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceAllocationMessageResponse.ProtoReflect.Descriptor instead.
func (*SpaceAllocationMessageResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceAllocationMessageResponse) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SpaceAllocationMessageResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SpaceAllocationMessageResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SpaceAllocationMessageResponse) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

type PartitionAllocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device    string `protobuf:"bytes,1,opt,name=Device,proto3" json:"Device,omitempty"`
	MountPath string `protobuf:"bytes,2,opt,name=Mount_path,json=MountPath,proto3" json:"Mount_path,omitempty"`
	Fsid      string `protobuf:"bytes,4,opt,name=fsid,proto3" json:"fsid,omitempty"`
	AllocSize int64  `protobuf:"varint,3,opt,name=alloc_size,json=allocSize,proto3" json:"alloc_size,omitempty"`
}

func (x *PartitionAllocRequest) Reset() {
	*x = PartitionAllocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionAllocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionAllocRequest) ProtoMessage() {}

func (x *PartitionAllocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionAllocRequest.ProtoReflect.Descriptor instead.
func (*PartitionAllocRequest) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{8}
}

func (x *PartitionAllocRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *PartitionAllocRequest) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *PartitionAllocRequest) GetFsid() string {
	if x != nil {
		return x.Fsid
	}
	return ""
}

func (x *PartitionAllocRequest) GetAllocSize() int64 {
	if x != nil {
		return x.AllocSize
	}
	return 0
}

type PartitionAllocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
}

func (x *PartitionAllocResponse) Reset() {
	*x = PartitionAllocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionAllocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionAllocResponse) ProtoMessage() {}

func (x *PartitionAllocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionAllocResponse.ProtoReflect.Descriptor instead.
func (*PartitionAllocResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{9}
}

func (x *PartitionAllocResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PartitionAllocResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type SpaceAllocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Size    int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Spaceid string `protobuf:"bytes,3,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
}

func (x *SpaceAllocationRequest) Reset() {
	*x = SpaceAllocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceAllocationRequest) ProtoMessage() {}

func (x *SpaceAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceAllocationRequest.ProtoReflect.Descriptor instead.
func (*SpaceAllocationRequest) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{10}
}

func (x *SpaceAllocationRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *SpaceAllocationRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SpaceAllocationRequest) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

type SpaceallocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spaceid    string `protobuf:"bytes,1,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
	StatusCode int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Size       int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Fsid       string `protobuf:"bytes,4,opt,name=fsid,proto3" json:"fsid,omitempty"`
}

func (x *SpaceallocationResponse) Reset() {
	*x = SpaceallocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceallocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceallocationResponse) ProtoMessage() {}

func (x *SpaceallocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceallocationResponse.ProtoReflect.Descriptor instead.
func (*SpaceallocationResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceallocationResponse) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

func (x *SpaceallocationResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SpaceallocationResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SpaceallocationResponse) GetFsid() string {
	if x != nil {
		return x.Fsid
	}
	return ""
}

type DeleteSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spaceid string `protobuf:"bytes,1,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
}

func (x *DeleteSpaceRequest) Reset() {
	*x = DeleteSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceRequest) ProtoMessage() {}

func (x *DeleteSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpaceRequest) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSpaceRequest) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

type DeleteSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spaceid    string `protobuf:"bytes,1,opt,name=spaceid,proto3" json:"spaceid,omitempty"`
	StatusCode int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *DeleteSpaceResponse) Reset() {
	*x = DeleteSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samba_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceResponse) ProtoMessage() {}

func (x *DeleteSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_samba_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteSpaceResponse) Descriptor() ([]byte, []int) {
	return file_samba_admin_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSpaceResponse) GetSpaceid() string {
	if x != nil {
		return x.Spaceid
	}
	return ""
}

func (x *DeleteSpaceResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_samba_admin_proto protoreflect.FileDescriptor

var file_samba_admin_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x61, 0x6d, 0x62, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61,
	0x6d, 0x62, 0x61, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x22, 0x4b,
	0x0a, 0x0d, 0x53, 0x61, 0x6d, 0x62, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x73, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x73, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x54, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x73, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x73, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x60, 0x0a, 0x16, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x16, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x17, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x73, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x8f, 0x03, 0x0a, 0x0f, 0x53, 0x61,
	0x6d, 0x62, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6d, 0x62, 0x61, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d,
	0x62, 0x61, 0x53, 0x68, 0x61, 0x72, 0x65, 0x1a, 0x0e, 0x2e, 0x53, 0x61, 0x6d, 0x62, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x08, 0x2e, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x56, 0x0a, 0x0e, 0x44,
	0x69, 0x73, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x92, 0x01, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x61, 0x6e, 0x6f, 0x53, 0x41, 0x2f, 0x73,
	0x61, 0x6d, 0x62, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x61, 0x6d, 0x62, 0x61, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_samba_admin_proto_rawDescOnce sync.Once
	file_samba_admin_proto_rawDescData = file_samba_admin_proto_rawDesc
)

func file_samba_admin_proto_rawDescGZIP() []byte {
	file_samba_admin_proto_rawDescOnce.Do(func() {
		file_samba_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_samba_admin_proto_rawDescData)
	})
	return file_samba_admin_proto_rawDescData
}

var file_samba_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_samba_admin_proto_goTypes = []interface{}{
	(*RequestSambaShare)(nil),              // 0: RequestSambaShare
	(*SambaResponse)(nil),                  // 1: SambaResponse
	(*AddUser)(nil),                        // 2: AddUser
	(*AddUserResponse)(nil),                // 3: AddUserResponse
	(*DeleteShareRequest)(nil),             // 4: DeleteShareRequest
	(*DeleteShareResponse)(nil),            // 5: DeleteShareResponse
	(*SpaceAllocationMessage)(nil),         // 6: SpaceAllocationMessage
	(*SpaceAllocationMessageResponse)(nil), // 7: SpaceAllocationMessageResponse
	(*PartitionAllocRequest)(nil),          // 8: PartitionAllocRequest
	(*PartitionAllocResponse)(nil),         // 9: PartitionAllocResponse
	(*SpaceAllocationRequest)(nil),         // 10: SpaceAllocationRequest
	(*SpaceallocationResponse)(nil),        // 11: SpaceallocationResponse
	(*DeleteSpaceRequest)(nil),             // 12: DeleteSpaceRequest
	(*DeleteSpaceResponse)(nil),            // 13: DeleteSpaceResponse
}
var file_samba_admin_proto_depIdxs = []int32{
	0,  // 0: SambaAllocation.AllocateSambaShare:input_type -> RequestSambaShare
	2,  // 1: SambaAllocation.AddUserToShare:input_type -> AddUser
	4,  // 2: SambaAllocation.DeleteShare:input_type -> DeleteShareRequest
	10, // 3: SambaAllocation.AlloateSpace:input_type -> SpaceAllocationRequest
	12, // 4: SambaAllocation.DeleteSpace:input_type -> DeleteSpaceRequest
	6,  // 5: SambaAllocation.AllocateSpaceConversation:input_type -> SpaceAllocationMessage
	8,  // 6: DiskAllocation.AddDiskToServer:input_type -> PartitionAllocRequest
	10, // 7: SpaceAllocation.AlloateSpace:input_type -> SpaceAllocationRequest
	12, // 8: SpaceAllocation.DeleteSpace:input_type -> DeleteSpaceRequest
	1,  // 9: SambaAllocation.AllocateSambaShare:output_type -> SambaResponse
	3,  // 10: SambaAllocation.AddUserToShare:output_type -> AddUserResponse
	5,  // 11: SambaAllocation.DeleteShare:output_type -> DeleteShareResponse
	11, // 12: SambaAllocation.AlloateSpace:output_type -> SpaceallocationResponse
	13, // 13: SambaAllocation.DeleteSpace:output_type -> DeleteSpaceResponse
	6,  // 14: SambaAllocation.AllocateSpaceConversation:output_type -> SpaceAllocationMessage
	9,  // 15: DiskAllocation.AddDiskToServer:output_type -> PartitionAllocResponse
	11, // 16: SpaceAllocation.AlloateSpace:output_type -> SpaceallocationResponse
	13, // 17: SpaceAllocation.DeleteSpace:output_type -> DeleteSpaceResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_samba_admin_proto_init() }
func file_samba_admin_proto_init() {
	if File_samba_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samba_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSambaShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SambaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceAllocationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceAllocationMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionAllocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionAllocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceAllocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceallocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samba_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samba_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_samba_admin_proto_goTypes,
		DependencyIndexes: file_samba_admin_proto_depIdxs,
		MessageInfos:      file_samba_admin_proto_msgTypes,
	}.Build()
	File_samba_admin_proto = out.File
	file_samba_admin_proto_rawDesc = nil
	file_samba_admin_proto_goTypes = nil
	file_samba_admin_proto_depIdxs = nil
}
